.ui.fluid.card.status_update{ 'data-id': status_update.id, 'data-type': status_update.class }

  // Status update's author's avatar, full name and date
  .content
    - if policy(status_update).edit?

      // Edit and delete buttons
      .ui.right.floated.meta

        = link_to 'Edit', edit_status_update_path(status_update),
                  class: 'ui blue label'

        = link_to 'Delete', status_update_path(status_update),
                  method: :delete,
                  data: { confirm: 'Are you sure' },
                  class: 'ui red label'

    // Author's avatar
    = link_to user_path(status_update.author) do
      = image_tag status_update.author.profile.avatar.url(:thumb),
        class: 'ui left floated avatar image'

    // Author's name
    .header
      = link_to status_update.author.name, user_path(status_update.author)

    // Time at status_update creation
    .meta
      = time_ago_in_words(status_update.created_at)
      ago

  - unless status_update.text.empty?

    // Status update text
    .content
      .description.status_update__text
        = sanitize status_update.text,
          tags: %w[strong em a h3 h4 h5 h6 p hr ul ol li],
          attributes: %w[href]

  - if status_update.image.url

    // Status update image
    .ui.centered.image
      = image_tag status_update.image.url :normal

  // Status update statistics
  .extra.statistics.content

    // Likes count
    %span.likes.count{ 'data-tooltip': '44'}
      = pluralize status_update.reload.likes_count, 'like'

    // Comments count
    %a.comments_count.whitespace--left{ 'data-behavior': 'show-comments' }
      = pluralize status_update.reload.comments_count, 'comment'

  // Status update actions
  .extra.content

    // Like link
    - if policy(status_update).like?
      %span.likes.actions
        = render_likes status_update

    - if policy(status_update).comment?
      // Comment link
      %a.whitespace--left{ 'data-behavior': 'comment-link' }
        %i.comment.icon
        Add comment

  - if policy(status_update).comment?
    // Comment form
    .extra.content.comment__form{ style: 'display: none;' }
      = render partial: 'comments/form', locals: { commentable: status_update }

  // Status update comments
  .comments.content{ style: 'display: none;' }
    %h4 Comments
    .ui.comments{ style: 'max-width: 100%' }
      = render status_update.comments
